name: Deploy and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: true

    - uses: extractions/setup-just@v1

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.1

    - name: Install dependencies
      run: |
        just install

    - name: Run checks
      run: |
        just check typecheck

  deploy:
    # This job only runs when a PR is merged.
    if: github.event_name == 'push'
    needs: check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: true

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Setup auth
      id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up credentials file
      run: echo '${{secrets.GCP_SA_KEY}}' > ./service_account.json

    - name: Deploy agents
      run: |
        ./scripts/deploy.sh

  test:
    # This job only runs when a PR is merged.
    if: github.event_name == 'push'
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        submodules: true

    - uses: extractions/setup-just@v1

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.1

    - name: Setup auth
      id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up credentials file
      run: echo '${{secrets.GCP_SA_KEY}}' > ./service_account.json

    - name: Install dependencies
      run: |
        just install

    - name: Run checks
      run: |
        just check

    - name: Test main
      env:
        GOOGLE_CLOUD_PROJECT: ${{secrets.GCP_PROJECT}}
        GOOGLE_APPLICATION_CREDENTIALS: service_account.json
        SERVICE_ACCOUNT: ${{secrets.GCP_SERVICE_ACCOUNT}}
      run: |
        echo '${{secrets.GCP_SA_KEY}}' > service_account.json
        FIXIE_API_KEY=$(gcloud secrets versions access --secret fixie_auth_token latest) just test
